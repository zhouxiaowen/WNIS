<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".txt" #>
<#@ include file="MultiOutput.tt" #>
<#@ include file="SqlHelper.tt" #>
<# 
	string controllerName = "Sys";
	string actionName = "MenuModule";
	string apiName = "sysMenuModule";
	string tableName = "Sys_MenuModule";
	string className = "SysMenuModule";
	string chinaName = "菜单模块";

	DataTable dt =  SqlHelper.GetColumnsByTableName(tableName);
#>
@{
    ViewBag.Title = "Module";
}

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            @*全屏使用*@
            <div class="widget-header bordered-bottom" style="">
                <span class="widget-caption"><i class="fa fa-cogs"></i>&nbsp;<#= chinaName #>管理</span>
                <div class="widget-buttons">
                    <a href="#" id="fullscreen-toggler" class="fullscreen">
                        <i class="glyphicon glyphicon-fullscreen"></i>
                    </a>
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a class="sidebar-toggler" href="#">
                        <i class="fa fa-arrows-h"></i>
                    </a>
                </div>
                <hr />
            </div>
            
            <div  id="main" class="widget-body no-padding">
                <div class="container-fluid">
                    <div class="row" style="padding:10px 0px;">
                        <div class="col-md-12">
                            <a id="BtnRefresh" class="btn btn-blue" href="javascript:void(0);"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
                            <a id="BtnAdd" class="btn btn-blue" href="javascript:void(0);"><i class="fa fa-plus"></i>&nbsp;新增</a>
                        </div>
                    </div>
                    <div class="row padding-btm-5">
                        <div class="col-md-12 form-inline">
                            <input type="text" placeholder="请输入关键字" id="TxtKey" class="form-control"  style="width:200px;height:28px;">
                            &nbsp;
                            <a id="BtnSearch" class="btn btn-blue" href="javascript:void(0);"><i class="fa fa-search"></i>&nbsp;搜索</a>
                        </div>
                    </div>

                    <div class="row" style="padding:0px 10px;">
                        <table class="table table-bordered table-hover table-striped" id="GridUser">
                            <thead class="">
                                @*bordered-blueberry*@
                                <tr role="row">
                                    <th style="width:60px;">编辑</th>
                                    <th style="width:60px;">删除</th>
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
									<th><#= rowItem["说明"].ToString() #></th>
<#		}
	} #>
                                </tr>
                            </thead>
                            <tbody>

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="SpanEdit" style="display:none;">
    <div class="container-fluid">
        <form  id="EditForm" onsubmit="return false;">
            <input type="hidden" id="TxtId" />
<#
	foreach (DataRow rowItem in dt.Rows)
	{		
		if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
		{
#>
			<div class="row padding-top-5 form-group">
                <label class="col-sm-3 control-label text-right">*<#= rowItem["说明"].ToString() #>：</label>
                <div class="col-sm-9">
                    <input type="text"  placeholder=""  id="Txt<#= rowItem["字段名"].ToString() #>" class="form-control" name="u<#= rowItem["字段名"].ToString().ToLower() #>">
                </div>
            </div>
<#		}
	} #>
           
            <div class="Edit-Footer">
                <button type="submit" class="btn btn-info" id="BtnSubmit"><i class="fa fa-check"></i>&nbsp;提交</button>
                &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
                <button type="button" class="btn btn-darkorange" id="BtnCancel"><i class="fa fa-close"></i>&nbsp;取消</button>
            </div>
        </form>
    </div>
</div>
<script src="~/Content/<#=controllerName#>/scripts/<#=actionName#>.js"></script>


<# SaveOutput("my.html"); #>
<#//------------- #>
$(function () {
    $("#BtnRefresh").click(function () {
        BindGrid();
    });

    $("#BtnAdd").click(function () {
        AddClick();
    });

    $("#BtnSubmit").click(function () {
        SubmitClick();
    });

    $("#BtnCancel").click(function () {
        layer.closeAll();
    });

    $("#BtnSearch").click(function () {
        BindGrid();
    });

    $("#TxtKey").bind('keydown', function (event) {
        if (event.keyCode === 13) {
            BindGrid();
        }
    });

    BindGrid();
});
function BindGrid() {
    if ($.fn.dataTable.isDataTable('#DataGrid')) {
        $("#DataGrid").DataTable().ajax.reload();
    }
    else {
    $("#DataGrid").DataTable(
        {
            "bPaginate": true, //翻页功能
            "bLengthChange": true, //改变每页显示数据数量
            "bFilter": false, //过滤功能
            "bInfo": true,//页脚信息
            "bAutoWidth": true,//自动宽度
            "bServerSide": true,//服务端处理分页
            "language": {
                "sInfo": "从第 _START_ 条到第 _END_ 条，总 _TOTAL_ 条",
                "oPaginate": {
                    "sPrevious": "前一页",
                    "sNext": "下一页"
                }
            },
            "fnCreatedRow": function (row, data, dataIndex) {
                $(row).children('td').eq(0).attr('style', 'text-align: center;')
                $(row).children('td').eq(1).attr('style', 'text-align: center;')
            },
            ajax: function (data, callback, settings) {
                var input = $.dataTablesToAbpInput(data, settings);
                input.Key = $("#TxtKey").val();

                abp.ui.setBusy("#main",
                    abp.services.app.<#=apiName#>.query<#=className#>(input)
                        .done(function (data) {
                            if (data.Success) {
                                if (data.TargetUrl != null) {
                                    window.location = data.TargetUrl;
                                }
                                else {
                                    if (data.Result != null) {
                                        var resonse = $.dataTablesFromAbpOutput(input, data.Result, settings);
                                        callback(resonse);
                                    }
                                }
                            }
                            else {
                                abp.message.warn(data.error.message);
                            }
                        })
                        .fail(function (result) {
                            abp.message.error(result);
                        }));
            },

            "columns":
            [
                {
                    "data": null, "render": function (data, display, row, setting) {
                        return "<a style='font-size:14px;cursor:pointer;' onclick='EditClick(\"" + setting.row + "\")'><i class='fa fa-edit'></i></a>";
                    }
                },
                {
                    "data": null, "render": function (data, display, row, setting) {
                        return "<a style='color:red;font-size:14px;cursor:pointer;' onclick='DelClick(\"" + row.UId + "\",\"" + row.Name + "信息\")'><i class='fa fa-trash-o'></i></a>";
                    }
                },
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
				{ "data": "<#= rowItem["字段名"].ToString() #>" },
<#		}
	} //#>
               
            ]
        });
}
}

//添加信息
function AddClick() {
    ClearValue();
    FormValidator();
    LayerShow("添加信息");
}
//编辑信息
function EditClick(index) {
    //var index = $(e.target).closest(this).closest("tr").index();
    BindValue(index);
    FormValidator();
    LayerShow("编辑信息");
}

//弹出编辑框
function LayerShow(title) {
    //页面层
    layer.open({
        type: 1,
        title: title,
        skin: 'layui-layer-rim', //加上边框
        area: ['420px', '300px'], //宽高
        content: $("#SpanEdit")
    });
}

//清除控件值
function ClearValue() {
	$("#TxtId").val("");
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
	$("#Txt<#= rowItem["字段名"].ToString() #>").val("");
<#		}
	} //#>
}
//绑定控件值
function BindValue(index) {
    var rowdata = $("#DataGrid").DataTable().data()[index];
	$("#TxtId").val(rowdata.UId);	//修改地方
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
	$("#Txt<#= rowItem["字段名"].ToString() #>").val(rowdata.<#= rowItem["字段名"].ToString() #>);
<#		}
	} //#>
}
//添加表单验证
function FormValidator() {
    if ($("#EditForm").data('bootstrapValidator') != null) {
    $("#EditForm").data('bootstrapValidator').resetForm();
// $('#EditForm').data('bootstrapValidator', null);
    } else {
    $("#EditForm").bootstrapValidator({
        message: '这个值没有被验证',
        feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            // invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
			u<#= rowItem["字段名"].ToString().ToLower() #>: {
                message: '<#= rowItem["说明"].ToString() #>验证失败',
                validators: {
                    notEmpty: {
                        message: '<#= rowItem["说明"].ToString() #>不能为空'
                    }
                }
            },
<#		}
	} //#>
        }
    });

    $("#EditForm").data('bootstrapValidator').resetForm();
    }



}

//提交修改
function SubmitClick() {
    $('#EditForm').data('bootstrapValidator').validate();  
    if (!$('#EditForm').data('bootstrapValidator').isValid()) {
        layer.msg("信息填写不完整。");
        return;
    } else {
        //通过校验，可进行提交等操作
        var input = new Object();
        input.UId = $("#TxtId").val();
<#
    foreach (DataRow rowItem in dt.Rows)
    {		
        if (string.IsNullOrEmpty(rowItem["主键"].ToString()))
        {
#>
		input.<#= rowItem["字段名"].ToString() #> = $("#Txt<#= rowItem["字段名"].ToString() #>").val();
<#		}
	} //#>

        abp.ui.setBusy("#main",
            abp.services.app.<#=apiName#>.addOrUpdate<#=className#>(input)
                .done(function (data) {
                    if (data.Success) {
                        if (data.Result.Message == null || data.Result.Message == "") {
                            abp.notify.success("操作成功!");
                            BindGrid();
                            layer.closeAll();
                        }
                        else {
                            layer.msg(data.Result.Message);
                            //abp.message.warn(data.Result.Message);
                        }
                    }
                })
                .fail(function (result) {
                    layer.msg(result);
                })
        )
        return false;
    }

}


//是否删除
function DelClick(id, message) {
    layer.confirm("删除" + message + "？", {
        btn: ['删除', '取消'] //按钮
    }, function () {
        var input = new Object();
        input.UId = id;
        abp.ui.setBusy("#main",
            abp.services.app.<#=apiName#>.delete<#=className#>(input)
                .done(function (data) {
                    BindGrid();
                    layer.msg('删除成功');
                })
                .fail(function (result) {
                    layer.msg("删除失败");
                })
        )
        
    }, function () {
        //layer.msg('删除失败');
    });
}




<# SaveOutput("my.js"); #>